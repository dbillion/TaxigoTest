{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\oluda\\\\Downloads\\\\Compressed\\\\mdn-css\\\\practise\\\\carousel\\\\fundex\\\\src\\\\Main.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useReducer, useContext, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case 'reset':\n      {\n        return action.payload;\n      }\n\n    case 'add':\n      {\n        return [...state, {\n          id: Date.now(),\n          text: '',\n          completed: false\n        }];\n      }\n\n    case 'delete':\n      {\n        return state.filter(item => item.id !== action.payload);\n      }\n\n    case 'completed':\n      {\n        return state.map(item => {\n          if (item.id === action.payload) {\n            return { ...item,\n              completed: !item.completed\n            };\n          }\n\n          return item;\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\n\nconst Context = /*#__PURE__*/React.createContext();\n\nfunction useEffectOnce(cb) {\n  _s();\n\n  const didRun = useRef(false);\n  useEffect(() => {\n    if (!didRun.current) {\n      cb();\n      didRun.current = true;\n    }\n  });\n}\n\n_s(useEffectOnce, \"7Lmt+8F9DypafMBOzE2A2XRnsdM=\");\n\nexport default function TodosApp() {\n  _s2();\n\n  const [state, dispatch] = useReducer(appReducer, []);\n  useEffectOnce(() => {\n    const raw = localStorage.getItem('data');\n    dispatch({\n      type: 'reset',\n      payload: raw ? JSON.parse(raw) : []\n    });\n  });\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(state));\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: dispatch,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'add'\n      }),\n      children: \"New Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodosList, {\n      items: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(TodosApp, \"lgiZ1LTjPzeljoo5ftm+oicK2Ok=\", false, function () {\n  return [useEffectOnce];\n});\n\n_c = TodosApp;\n\nfunction TodosList(_ref) {\n  let {\n    items\n  } = _ref;\n  return items.map(item => /*#__PURE__*/_jsxDEV(TodoItem, { ...item\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 28\n  }, this));\n}\n\n_c2 = TodosList;\n\nfunction TodoItem(_ref2) {\n  _s3();\n\n  let {\n    id,\n    completed,\n    text\n  } = _ref2;\n  const dispatch = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: completed,\n      onChange: () => dispatch({\n        type: 'completed',\n        payload: id\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'delete',\n        payload: id\n      }),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(TodoItem, \"kCU+r/6VuXUfg74P0SIOBSNFld8=\");\n\n_c3 = TodoItem;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TodosApp\");\n$RefreshReg$(_c2, \"TodosList\");\n$RefreshReg$(_c3, \"TodoItem\");","map":{"version":3,"sources":["C:/Users/oluda/Downloads/Compressed/mdn-css/practise/carousel/fundex/src/Main.js"],"names":["React","useReducer","useContext","useEffect","useRef","appReducer","state","action","type","payload","id","Date","now","text","completed","filter","item","map","Context","createContext","useEffectOnce","cb","didRun","current","TodosApp","dispatch","raw","localStorage","getItem","JSON","parse","setItem","stringify","TodosList","items","TodoItem","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext, useEffect, useRef } from 'react';\r\n\r\nfunction appReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'reset': {\r\n      return action.payload;\r\n    }\r\n    case 'add': {\r\n      return [\r\n        ...state,\r\n        {\r\n          id: Date.now(),\r\n          text: '',\r\n          completed: false,\r\n        },\r\n      ];\r\n    }\r\n    case 'delete': {\r\n      return state.filter(item => item.id !== action.payload);\r\n    }\r\n    case 'completed': {\r\n      return state.map(item => {\r\n        if (item.id === action.payload) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nconst Context = React.createContext();\r\n\r\nfunction useEffectOnce(cb) {\r\n  const didRun = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!didRun.current) {\r\n      cb();\r\n      didRun.current = true;\r\n    }\r\n  });\r\n}\r\n\r\nexport default function TodosApp() {\r\n  const [state, dispatch] = useReducer(appReducer, []);\r\n\r\n  useEffectOnce(() => {\r\n    const raw = localStorage.getItem('data');\r\n    dispatch({ type: 'reset', payload: raw ? JSON.parse(raw) : [] });\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      localStorage.setItem('data', JSON.stringify(state));\r\n    },\r\n    [state]\r\n  );\r\n\r\n  return (\r\n    <Context.Provider value={dispatch}>\r\n      <h1>Todos App</h1>\r\n      <button onClick={() => dispatch({ type: 'add' })}>New Todo</button>\r\n      <br />\r\n      <br />\r\n      <TodosList items={state} />\r\n    </Context.Provider>\r\n  );\r\n}\r\n\r\nfunction TodosList({ items }) {\r\n  return items.map(item => <TodoItem key={item.id} {...item} />);\r\n}\r\n\r\nfunction TodoItem({ id, completed, text }) {\r\n  const dispatch = useContext(Context);\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n      }}\r\n    >\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={completed}\r\n        onChange={() => dispatch({ type: 'completed', payload: id })}\r\n      />\r\n      <input type=\"text\" defaultValue={text} />\r\n      <button onClick={() => dispatch({ type: 'delete', payload: id })}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}